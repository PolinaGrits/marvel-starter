{"version":3,"file":"static/js/907.5328e707.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/errorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hooks.js"],"sourcesContent":["import {Component} from \"react\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n       this.setState({\n           error: true\n       })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import React, {useState, useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ?  setNewItemLoading(false) :  setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return(\n                <li className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}\n                    >\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.name}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return(\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <>\n            <div className=\"comics__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button\n                    className=\"button button__main button__long\"\n                    onClick={() => onRequest(offset)}\n                    disabled={newItemLoading}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        </>\n\n    )\n}\n\nexport default ComicsList;","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import {useHttp} from \"../hooks/http.hooks\";\n\n\nconst useMarvelService = () => {\n    const {loading, error, request, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=80fda7fb7901b4c8407a4d4437f9e93b';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformComics= (comics) => {\n        return {\n            id: comics.id,\n            name: comics.title,\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\n            description: comics.description || 'There is no description for this character',\n            pageCount: comics.pageCount\n                ? `${comics.pageCount} p.`\n                : \"No information about the number of pages\",\n            language: comics.textObjects[0]?.language || \"en-us\",\n        }\n    }\n\n    return {loading, error, getCharacter, getAllCharacters, clearError, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url,\r\n                                       method = 'GET',\r\n                                       body = null,\r\n                                       headers = {'Content-Type' : 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null)\r\n    }, [])\r\n\r\n    return {loading, error, request, clearError};\r\n}"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","this","setState","_jsx","ErrorMessage","props","children","Component","style","display","width","height","objectFit","margin","src","img","alt","_jsxs","className","avengers","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","items","arr","map","item","i","tabIndex","Link","to","id","thumbnail","name","price","renderItems","errorMessage","spinner","Spinner","_Fragment","onClick","disabled","AppBanner","ComicsList","_useHttp","setLoading","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","_ref2","_callee2","_context2","char","path","extension","description","slice","homepage","urls","wiki","comics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","_comics$textObjects$","title","prices","pageCount","language","textObjects"],"sourceRoot":""}